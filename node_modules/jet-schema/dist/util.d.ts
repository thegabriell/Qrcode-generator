export type TFunc = (...args: any[]) => any;
export type TBasicObj = Record<string, unknown>;
export type TEnum = Record<string, string | number>;
export declare function isUndef(param: unknown): param is undefined;
export declare function isNum(param: unknown): param is number;
export declare function isStr(param: unknown): param is string;
export declare function isObj(val: unknown): val is NonNullable<object>;
export declare function isNonArrObj(arg: unknown): arg is Record<string, unknown>;
export declare function processEnum(arg: unknown): [unknown, TFunc];
export declare function isEnum(arg: unknown): arg is TEnum;
export declare function checkObjEntries(val: unknown, cb: (key: string, val: unknown) => boolean): val is NonNullable<object>;
export declare function isBasicObj(arg: unknown): arg is TBasicObj;
export declare const isDate: (val: unknown) => val is Date;
export declare function defaultCloneFn(arg: unknown): unknown;
