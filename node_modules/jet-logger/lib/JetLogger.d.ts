export declare enum LoggerModes {
    Console = "CONSOLE",
    File = "FILE",
    Custom = "CUSTOM",
    Off = "OFF"
}
export declare enum Formats {
    Line = "LINE",
    Json = "JSON"
}
export declare type TCustomLogFn = (timestamp: Date, prefix: string, content: unknown) => void;
export declare class JetLogger {
    private mode;
    private filePath;
    private timestamp;
    private format;
    private customLogFn;
    constructor(mode?: LoggerModes, filepath?: string, filepathDatetimeParam?: boolean, timestamp?: boolean, format?: Formats, customLogFn?: TCustomLogFn);
    private addDatetimeToFileName;
    info(content: unknown, printFull?: boolean): void;
    imp(content: unknown, printFull?: boolean): void;
    warn(content: unknown, printFull?: boolean): void;
    err(content: unknown, printFull?: boolean): void;
    private printLog;
    private setupLineFormat;
    private setupJsonFormat;
    private writeToFile;
}
declare const _default: JetLogger;
export default _default;
